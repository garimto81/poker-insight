name: Daily Poker Data Collection

on:
  schedule:
    # 매일 UTC 기준 09:00에 실행 (한국시간 18:00)
    - cron: '0 9 * * *'
  workflow_dispatch:  # 수동 실행 가능
    inputs:
      manual_run:
        description: 'Manual data collection'
        required: false
        default: 'true'

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DB_TYPE: ${{ secrets.DB_TYPE }}

jobs:
  collect-poker-data:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test environment and connections
      id: test
      run: |
        echo "=== Environment Test ==="
        python test_connection.py
      continue-on-error: true
        
    - name: Run data collection
      id: collection
      if: steps.test.outcome == 'success'
      run: |
        echo "=== Data Collection ==="
        python online_data_collector.py
      continue-on-error: true
      
    - name: Upload collection logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: collection-logs-${{ github.run_number }}
        path: |
          *.log
          collection_report_*.json
        retention-days: 30
        
    - name: Update dashboard data
      if: steps.collection.outcome == 'success'
      run: |
        python update_dashboard.py

  weekly-report:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 1 * * 0'  # 일요일 UTC 01:00에만 실행
    needs: collect-poker-data
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Generate weekly report
      run: |
        python generate_weekly_report.py
        
    - name: Upload weekly report
      uses: actions/upload-artifact@v4
      with:
        name: weekly-report-${{ github.run_number }}
        path: weekly_report_*.html
        retention-days: 90